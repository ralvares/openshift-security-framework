apiVersion: v1
kind: Namespace
metadata:
  name: ns-data-user
  labels:
    stage: demo
    layer: data
---
apiVersion: v1
kind: Namespace
metadata:
  name: ns-api-user
  labels:
    stage: demo
    layer: api
---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-creds
  namespace: ns-data-user
  labels:
    app: mysql
stringData:
  MYSQL_USER: forecast
  MYSQL_PASSWORD: changeme
  MYSQL_DATABASE: forecasts
  MYSQL_ROOT_PASSWORD: rootpw
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
  namespace: ns-data-user
  labels:
    app: mysql
spec:
  accessModes: [ "ReadWriteOnce" ]
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: ns-data-user
  labels:
    app: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: registry.redhat.io/rhel9/mariadb-105:latest
          envFrom:
            - secretRef:
                name: mysql-creds
          ports:
            - containerPort: 3306
          volumeMounts:
            - name: data
              mountPath: /var/lib/mysql/data
          readinessProbe:
            exec:
              command: ["bash","-c","mysqladmin ping -u root -p$MYSQL_ROOT_PASSWORD"]
            initialDelaySeconds: 10
            periodSeconds: 10
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: mysql-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: ns-data-user
  labels:
    app: mysql
spec:
  selector:
    app: mysql
  ports:
    - port: 3306
      targetPort: 3306
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-forecast
  namespace: ns-api-user
  labels:
    app: api-forecast
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-forecast
  template:
    metadata:
      labels:
        app: api-forecast
    spec:
      containers:
        - name: api-forecast
          image: YOUR_REGISTRY/api-forecast:dev
          env:
            - name: MYSQL_HOST
              value: mysql.ns-data-user.svc.cluster.local
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: mysql-creds
                  key: MYSQL_USER
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-creds
                  key: MYSQL_PASSWORD
            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: mysql-creds
                  key: MYSQL_DATABASE
          ports:
            - containerPort: 8000
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: api-forecast
  namespace: ns-api-user
  labels:
    app: api-forecast
spec:
  selector:
    app: api-forecast
  ports:
    - port: 8000
      targetPort: 8000
